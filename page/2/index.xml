<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog</title>
    <link>https://foezzy.github.io/</link>
    <description>Recent content on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Jun 2020 17:11:45 +0000</lastBuildDate>
    
        <atom:link href="https://foezzy.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>一个简单的最近热点Android阅读器</title>
        <link>https://foezzy.github.io/posts/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%9C%80%E8%BF%91%E7%83%AD%E7%82%B9android%E9%98%85%E8%AF%BB%E5%99%A8/</link>
        <pubDate>Mon, 30 Sep 2019 14:01:02 +0000</pubDate>
        
        <guid>https://foezzy.github.io/posts/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%9C%80%E8%BF%91%E7%83%AD%E7%82%B9android%E9%98%85%E8%AF%BB%E5%99%A8/</guid>
        <description>Blog https://foezzy.github.io/posts/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%9C%80%E8%BF%91%E7%83%AD%E7%82%B9android%E9%98%85%E8%AF%BB%E5%99%A8/ -&lt;p&gt;V2EX上有人做了个热榜api，看着不错&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.v2ex.com/t/578957&#34;&gt;https://www.v2ex.com/t/578957&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有人拿来做了个网页&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.telami.cn/hot/&#34;&gt;https://www.telami.cn/hot/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;发现这个网页好是好，但是一下子数据太多，看不过来，于是看了下接口，发现可以自己随便定&lt;/p&gt;
&lt;p&gt;在手机上我用的via浏览器，发现打开知乎或者一些会自动跳转的有scheme的网页，会出现找不到协议的错误，网页就没法看了&lt;/p&gt;
&lt;p&gt;基于以上两点，自己加工了一下，做了个安卓端可以自己定义内容的查看器，其实就是内嵌个webview，截图如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/osc_hh/pics/raw/master/093014545507_0pic1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;源码可以前往 &lt;a href=&#34;https://github.com/foezzy/EasyNewsForAndroid&#34;&gt;https://github.com/foezzy/EasyNewsForAndroid&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;直接下载apk体验地址 &lt;a href=&#34;https://www.lanzous.com/i6i60yj&#34;&gt;https://www.lanzous.com/i6i60yj&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用说明：&lt;/p&gt;
&lt;p&gt;1.点下面检查接口，在弹出框可以看到每个频道对应了一个id，记住这个id&lt;/p&gt;
&lt;p&gt;2.点击add，然后名字随便自己定，id就填那个id，然后ok就添加了一个频道&lt;/p&gt;
&lt;p&gt;3.点item就可以获取最新的新闻了&lt;/p&gt;
&lt;p&gt;4.长按item会出现关闭按钮，可以自由添加删除&lt;/p&gt;
&lt;p&gt;5.有时网络慢时，无任何反应，接口没返回时没做什么处理&lt;/p&gt;
&lt;p&gt;6.觉得不错请给个star谢谢&lt;/p&gt;
&lt;p&gt;其中webview最开始自己写了一个，发现一直有些奇怪的问题，后来找了一个开源的过来用，感谢这个作者&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/hylinux1024/BridgeWebView&#34;&gt;https://github.com/hylinux1024/BridgeWebView&lt;/a&gt;&lt;/p&gt;
- https://foezzy.github.io/posts/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%9C%80%E8%BF%91%E7%83%AD%E7%82%B9android%E9%98%85%E8%AF%BB%E5%99%A8/ - </description>
        </item>
    
    
    
        <item>
        <title>.9图片设置无效问题</title>
        <link>https://foezzy.github.io/posts/9%E5%9B%BE%E7%89%87%E8%AE%BE%E7%BD%AE%E6%97%A0%E6%95%88%E9%97%AE%E9%A2%98/</link>
        <pubDate>Mon, 30 Sep 2019 13:43:08 +0000</pubDate>
        
        <guid>https://foezzy.github.io/posts/9%E5%9B%BE%E7%89%87%E8%AE%BE%E7%BD%AE%E6%97%A0%E6%95%88%E9%97%AE%E9%A2%98/</guid>
        <description>Blog https://foezzy.github.io/posts/9%E5%9B%BE%E7%89%87%E8%AE%BE%E7%BD%AE%E6%97%A0%E6%95%88%E9%97%AE%E9%A2%98/ -&lt;p&gt;最近在加.9图片的时候，发现用了一直没生效，最后搜到是说要放到xhdpi目录下，很奇葩的问题，特此记录一下&lt;/p&gt;
&lt;p&gt;原文链接: &lt;a href=&#34;https://blog.csdn.net/rrr9805/article/details/79165273&#34;&gt;https://blog.csdn.net/rrr9805/article/details/79165273&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;android-studio中使用9图片&#34;&gt;Android Studio中使用.9图片&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Android Studio项目中对于.9图片的规范更加的严格,.9图片不能放到mipmap目录中,否则编译会报错,只能放到drawable目录中.&lt;/li&gt;
&lt;li&gt;Android Studio集成了draw9patch工具,所以如果你更新了最新的SDK的话,在tools目录下是找不到draw9patch.bat这个脚本执行文件的
&lt;strong&gt;使用Android Studio自带的draw9patch工具的步骤:&lt;/strong&gt;
&lt;img src=&#34;https://img-blog.csdn.net/20180125181023506?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcnJyOTgwNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&#34; alt=&#34;这里写图片描述&#34;&gt;
生成完.9图片后,切记要&lt;strong&gt;拷贝到drawable文件夹中&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;设置好9图片不生效&#34;&gt;设置好.9图片不生效&lt;/h2&gt;
&lt;p&gt;这里不赘述如何画一张.9图片,方法自行百度.可以参考
&lt;a href=&#34;http://blog.csdn.net/lastwarmth/article/details/49991445&#34;&gt;http://blog.csdn.net/lastwarmth/article/details/49991445&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重点来了,当你绘制好.9图片,然后应用到View上的时候,怎么都不生效的话那么&lt;/strong&gt;
\1. 确保.9图片在drawable目录下
\2. 确保你的mipmap目录下,没有和.9图片重名(&lt;strong&gt;此处的重名是指,排除文件后缀的重名,例如: back.png和back.9.png属于同名&lt;/strong&gt;)的文件,如果有,删除掉mipmap目录下的同名文件
\3. 上面操作都做了还不生效的话,那么就在你的&lt;strong&gt;res目录下,新建一个drawable-xdpi的目录&lt;/strong&gt;,把.9图片移动到这个目录中(楼主就是这么解决的),然后就可以完结撒花了;&lt;/p&gt;
- https://foezzy.github.io/posts/9%E5%9B%BE%E7%89%87%E8%AE%BE%E7%BD%AE%E6%97%A0%E6%95%88%E9%97%AE%E9%A2%98/ - </description>
        </item>
    
    
    
        <item>
        <title>Android依赖相问题</title>
        <link>https://foezzy.github.io/posts/android%E4%BE%9D%E8%B5%96%E7%9B%B8%E9%97%AE%E9%A2%98/</link>
        <pubDate>Thu, 29 Aug 2019 10:20:29 +0000</pubDate>
        
        <guid>https://foezzy.github.io/posts/android%E4%BE%9D%E8%B5%96%E7%9B%B8%E9%97%AE%E9%A2%98/</guid>
        <description>Blog https://foezzy.github.io/posts/android%E4%BE%9D%E8%B5%96%E7%9B%B8%E9%97%AE%E9%A2%98/ -&lt;h1 id=&#34;android依赖第三方库引起一个报错&#34;&gt;Android依赖第三方库引起一个报错&lt;/h1&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;uses-sdk:minSdkVersion 1 cannot be smaller than version 14 declared in library [com.android.support:appcompat-v7:28.0.0]
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;谷歌查了一下说是依赖库版本比主模块版本低，要提高依赖库的版本， 但是找了发现没有低，主要是没有找到是哪个依赖库，最终是在报错信息里发现了那个库没有minSdkVersion字段，在该模块的build.gradle文件下的defaultConfig加上对应的minSdkVersion即可，要不低于主模块的版本&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/osc_hh/pics/raw/master/WxOCKl.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
- https://foezzy.github.io/posts/android%E4%BE%9D%E8%B5%96%E7%9B%B8%E9%97%AE%E9%A2%98/ - </description>
        </item>
    
    
    
        <item>
        <title>Android Studio 使用相关</title>
        <link>https://foezzy.github.io/posts/android-studio-%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%85%B3/</link>
        <pubDate>Mon, 12 Aug 2019 13:52:14 +0000</pubDate>
        
        <guid>https://foezzy.github.io/posts/android-studio-%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%85%B3/</guid>
        <description>Blog https://foezzy.github.io/posts/android-studio-%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%85%B3/ -&lt;h2 id=&#34;记录android-studio使用过程中配置的快捷键插件相关的东西mac平台&#34;&gt;记录Android Studio使用过程中，配置的快捷键，插件相关的东西（Mac平台）&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;快捷键&#34;&gt;快捷键&lt;/h3&gt;
&lt;h4 id=&#34;在finder快速打开某个文件或文件夹&#34;&gt;在Finder快速打开某个文件或文件夹&lt;/h4&gt;
&lt;p&gt;本来这个东西是挺简单的，结果找了有一会，特地记录下&lt;/p&gt;
&lt;p&gt;直接右键有个选项 - Reveal in Finder&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/osc_hh/pics/raw/master/71Q1U2.png&#34; alt=&#34;pic&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是每次去找都是在一堆选择中找它，特别不方便&lt;/p&gt;
&lt;p&gt;想找个什么插件也没有找到能直接打开的，后来突然想到可以设置快捷键&lt;br&gt;
这个Reveal in Finder默认是没有快捷键的~ 有点奇葩&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;在Preferences - Keymap - 搜索 Reveal in Finder - 双击它 - Add Keyboard Shortcut&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/osc_hh/pics/raw/master/iBDBYO.png&#34; alt=&#34;pic&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置成上面这样，就是直接按F键就行了，然后Apply - 确定，以后在Finder里打开直接双击F键就行了，非常方便&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;勘误：&lt;/p&gt;
&lt;p&gt;这种做法不太好，在开始使用后发现按F没反应，就是说不能直接用某个按键去操作，要加上功能键才行&lt;/p&gt;
&lt;p&gt;目前改为 control + ,  来实现打开文件夹目录的功能&lt;/p&gt;
&lt;h3 id=&#34;自动保存&#34;&gt;自动保存&lt;/h3&gt;
&lt;h4 id=&#34;在输入一行或者多行代码后按-command--s-自动格式化代码&#34;&gt;在输入一行或者多行代码后按 command + s 自动格式化代码&lt;/h4&gt;
&lt;p&gt;Android Studio默认是自动保存代码的，不需要按 command + s 按钮，但是每次代码都不能自动格式化，需要录制一个宏（相当于自动操作），然后给这个宏设置快捷键，然后就能实现自动格式化了
在mac上默认格式化的快捷键是option+command+l，所以本质是把这个快捷键映射成 command + s 而已，因为更符合操作习惯，具体操作见下面链接：
&lt;a href=&#34;https://www.jianshu.com/p/8f982253eb9e&#34;&gt;录制宏&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中设置代码风格的方式有默认的，也可以自己引入xml文件，参考链接：
&lt;a href=&#34;https://www.jianshu.com/p/6f78b59caf2c&#34;&gt;Android Studio 配置 Code Style&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这样设置之后，在保存的时候，就默认已经格式化完成了&lt;/p&gt;
&lt;p&gt;后文：
使用过程还发现xml文件也会格式化，但是还自动重新排序了，这样会导致布局文件异常，解决方案看下面链接：
&lt;a href=&#34;https://blog.csdn.net/hdhdgdhdh/article/details/100012810&#34;&gt;格式化 xml 文件时代码错乱问题&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;书签&#34;&gt;书签&lt;/h3&gt;
&lt;p&gt;Android Studio 自带的书签功能，挺好用的，要用起来&lt;/p&gt;
&lt;p&gt;默认情况下，菜单栏的 Navigate - Bookmarks 就可以操作书签，这里设置一下快捷方式，让它更好用&lt;/p&gt;
&lt;p&gt;添加到书签 Toggle Bookmark 这个是说你选中一行 然后选中这个选项，就添加到书签里，我设置成快捷键 F1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/osc_hh/pics/raw/master/PuSYU8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;显示书签，没什么好说的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/osc_hh/pics/raw/master/nO1OEv.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后打开书签还可以设置别名，方便查看，书签就这么多常用功能了~&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/osc_hh/pics/raw/master/lUvNZI.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;插件&#34;&gt;插件&lt;/h3&gt;
&lt;p&gt;//todo&lt;/p&gt;
- https://foezzy.github.io/posts/android-studio-%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%85%B3/ - </description>
        </item>
    
    
    
        <item>
        <title>七夕</title>
        <link>https://foezzy.github.io/posts/%E4%B8%83%E5%A4%95/</link>
        <pubDate>Wed, 07 Aug 2019 17:23:09 +0000</pubDate>
        
        <guid>https://foezzy.github.io/posts/%E4%B8%83%E5%A4%95/</guid>
        <description>Blog https://foezzy.github.io/posts/%E4%B8%83%E5%A4%95/ -&lt;p&gt;今天七夕，突然想起N年前某个骚年骚里骚气的操作，截个图做个纪念&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/osc_hh/pics/raw/master/RKFA4u.png&#34; alt=&#34;pic&#34;&gt;&lt;/p&gt;
&lt;p&gt;怀念QQ空间写说说，记日记的日记，好像过去好久了~&lt;/p&gt;
&lt;p&gt;晚上世界之窗走起~&lt;/p&gt;
- https://foezzy.github.io/posts/%E4%B8%83%E5%A4%95/ - </description>
        </item>
    
    
    
        <item>
        <title>Android编码规范</title>
        <link>https://foezzy.github.io/posts/android%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/</link>
        <pubDate>Fri, 14 Jun 2019 10:07:09 +0000</pubDate>
        
        <guid>https://foezzy.github.io/posts/android%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/</guid>
        <description>Blog https://foezzy.github.io/posts/android%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/ -&lt;h3 id=&#34;android编码规范&#34;&gt;Android编码规范&lt;/h3&gt;
&lt;h4 id=&#34;命名规范&#34;&gt;命名规范&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;包命名及分包结构规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;包名沿用 Java 编程的通用风格&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类命名规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本的类名沿用 Java 编程的通用风格（采用完整的英文描述符，所有单词第一个字母大写，采用驼峰式命名）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;android 特有的类，如 Activity、Fragment、Service、Provider、Adapter、View 等，则以对应的类型单词为后缀&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接口命名规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;类命名以大写字母 I 为前缀，如果是监听接口以 Listener 结尾&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在自定义的监听接口里，监听事件以 on 开头, 如 onOpenMenu(), onRefresh()&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法命名规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法命名沿用 Java 编程的通用风格（采用完整的英文描述符，函数名字以代表函数功能的英文单词组成，除首单词小写，其他单词首字母大写；一般的，函数第一个单词要求用动词）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变量命名规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;boolean 成员要以 is 开头，或以 has 开头。如： isFirst, hasMore&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;控件命名规范： 原则是 “view 的缩写 + 功能描述”。 比如一个 TextView 缩写为 tv(驼峰命名抽取出来的缩写)， 这个 TextView 是显示用户名字的， 所以就可以命名为: tvUserName。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常量的名字全部大写，单词之间用’_’分开&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;控件命名规范： 原则是 “view 的缩写 + 功能描述”。 比如一个 TextView 缩写为 tv(驼峰命名抽取出来的缩写)， 这个 TextView 是显示用户名字的， 所以就可以命名为: tvUserName&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;TextView : tv&lt;/th&gt;
&lt;th&gt;EditText : et&lt;/th&gt;
&lt;th&gt;Button : btn&lt;/th&gt;
&lt;th&gt;ImageButton : ib&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ImageView : iv&lt;/td&gt;
&lt;td&gt;CheckBox : cb&lt;/td&gt;
&lt;td&gt;RadioButton : rb&lt;/td&gt;
&lt;td&gt;ProgressBar : pb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Seekbar : sb&lt;/td&gt;
&lt;td&gt;ScrollView : sv&lt;/td&gt;
&lt;td&gt;ListView : lv&lt;/td&gt;
&lt;td&gt;GridView : gv&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WebView : wv&lt;/td&gt;
&lt;td&gt;ViewPager : vp&lt;/td&gt;
&lt;td&gt;ExpandableListView : elv&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;格式规范&#34;&gt;格式规范&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;注释规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;文件头注释（文件要加文件头）&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/**
* @author xxxx
* @date xxxx年xx月xx日
* Copyright xxxx. All rights reserved.
*/复制代码
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类／接口注释 (必须注明类／接口的编写目的、用途)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/** 
* 类或接口的作用描述
* @author XXX&amp;lt;email&amp;gt;
* @version xxxx-xx-xx（xxxx-xx-xx为年月日)
* Copyright XXXX. All rights reserved.
*/复制代码
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法头注释&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/**
* 方法的描述
* @param 参数的描述
* @return 返回类型的描述
* @exception 异常信息的描述
*/复制代码
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法体注释&lt;/p&gt;
&lt;p&gt;使用 &amp;ldquo;//&amp;rdquo; 进行注释，注释的内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制流结构说明&lt;/li&gt;
&lt;li&gt;变量说明&lt;/li&gt;
&lt;li&gt;复杂代码说明&lt;/li&gt;
&lt;li&gt;处理顺序说明&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;空行使用规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;package 和 import 之间要空一行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;给不同功能的代码块之间加上空行， 提升可读性&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;括弧使用规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;括号沿用 Java 风格，即左弧号 {是在方法声明这一行，而不是 C++ 式的另起一行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;即使只有一行内容， if/else/for/while 等条件或循环，都要加上大括号 { }&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码位置放置规范&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Activity 以 onCreate() 作为第一个方法， 其它类以构造函数做为第一个方法。 提高可读性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;功能上相近，有调用关系的函数尽量紧挨在一起&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Activity、Fragment 这些 android 里面具备生命周期的类，尽量把生命周期的方法按顺序排到一起，提高可读性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内部类／接口建议统一放在文件的开头或者结尾&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;优化&#34;&gt;优化&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;尽量不要有重复代码。 一发现有重复代码，就要进行重构，抽取出一个公有类 / 方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有大量 if/else 时，考虑是否能用策略模式、模板方法模式、面向接口编程来消除这种大量的 if/else&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个 JavaBean 类， 比如就是存一些数据的一个 Response 类，如果是要开放一个成员给别人用， 这个成员又有 getter，又有 setter， 那就直接声明为 public。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;layout 文件中， 层数不要过多， 尽量控制在 6 层以内。 当然，层数越少越好。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于一个布局文件中的控件具备大量相同的属性的时候，考虑将这些共同属性提取为 style 进行使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写布局文件需要观察布局的效果的时候，使用 tools:xxx，不要直接使用 android:xxx&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于 activity 中常用的自己定义的 initView、initData 这些方法抽象出来放到对应的基类当中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在设计某些功能、逻辑复杂的类或模块的时候，建议另外写一份设计文档，方便后人理解。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;适配&#34;&gt;适配&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;长宽用 dp 做单位， 一般不推荐用 px。 如果有特殊理由， 可以用 px，比如一条分隔线就只有 1px 宽。&lt;/li&gt;
&lt;/ul&gt;
- https://foezzy.github.io/posts/android%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/ - </description>
        </item>
    
    
    
        <item>
        <title>Glide遇到的问题</title>
        <link>https://foezzy.github.io/posts/glide%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link>
        <pubDate>Sat, 13 Apr 2019 17:18:28 +0000</pubDate>
        
        <guid>https://foezzy.github.io/posts/glide%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
        <description>Blog https://foezzy.github.io/posts/glide%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/ -&lt;h2 id=&#34;在recyclerview中notifydatasetchangedd的时候闪烁&#34;&gt;在RecyclerView中notifyDataSetChangedd的时候闪烁&lt;/h2&gt;
&lt;p&gt;这个问题是在item中某一项需要刷新的时候出现的，本来imageview不用刷新，结果还是刷新了，并且闪烁了一下，解决方法参考：&lt;a href=&#34;https://github.com/bumptech/glide/issues/527&#34;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;解决方法一：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RequestOptions options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; RequestOptions&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;transform&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; GlideCircleTransform&lt;span style=&#34;color:#f92672&#34;&gt;()).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getDrawable&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Glide&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;with&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Utils&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getContext&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;apply&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;into&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解决方法二：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RequestOptions options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; RequestOptions&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;transform&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; GlideCircleTransform&lt;span style=&#34;color:#f92672&#34;&gt;()).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dontAnimate&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fitCenter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Glide&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;with&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Utils&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getContext&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;()).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;apply&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;into&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;view&lt;span style=&#34;color:#f92672&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://foezzy.github.io/posts/glide%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/ - </description>
        </item>
    
    
    
    
  </channel>
</rss> 